# -*- coding: utf-8; mode: structured-text -*-
# Copyright (c) 2005, 2006 Brailcom, o.p.s.
# This is part of the LCG Documentation.
# See the file index.en.txt for copying conditions.

= Structured Text =

Structured text is a very simple and straightforward set of rules how to format
a plain text document.  The formatting allows to mark the logical structure of
sections, paragraphs, bullet lists etc.  A brief description follows.

You will find a brief description of the most useful constructs below.  See the
[formatting] for a complete guide.

Overview: @TOC@


==== Paragraphs ====

A paragraph is each continual set of rows of text.  Whenever you leave a blank
line, you start a new paragraph.  The line-breaks within the paragraph are
ignored, since the paragraph will be reformatted to fit into the browser
window.

It is recommended to wrap the paragraphs not to exceed 80 characters in width.


==== Sections ====

A section starts with a sections header.  The header is marked by a section
title surrounded by the equation signs (at least two).  The number of the
equation signs determines the level.
	 
*Example:*

------
 == This is the main heading ==

 The paragraphs below belong to the first section.

 === Subsection Heading ===

 This paragraph belongs to the subsection of the first section.

 == A second section ==

 This is a second section on the same level as the first one.
----- 

The main purpose of the sections is to have an additional logical structure
within the text sections.  All the sections will appear in the Table of
Contents (reflecting their hierarchy).  Thus sections should be used as much as
possible in the grammar explanations to allow direct access to certain points
from the table of contents.  Also links from within the exercises can be
targeted to a particular subsection of the Grammar section.


==== Bullet Lists ====

Bullet lists are marked by an asterisk at the beginning of each item.  Each
item is indented by a space.

*Example:*

------
 * can
 * may
 * must
------

This is rendered as:

 * can
 * may
 * must

Bullet lists can be nested, you can also make ordered lists etc.  More details
can be found in the [formatting].


==== Field-sets ====

In general, a field-set can be used to represent any logically paired data set.

In practise, field-sets can be handy for example within an exercises for
writing down a conversation.  Speaker's name must start the line and is
enclosed in colons from both sides.  The spoken text follows.  When split over
multiple lines, all the subsequent lines must be indented, until the next
speaker name appears.

*Example:*

------
:Granny: I thought you told me you'd already made up your mind to do
         accountancy.
:Emma:   I don't know. There are all kinds of other work in finance and I'm not
         sure accounting would be too exciting.
:Granny: Exciting? What you need is a good steady job and a good steady
         boyfriend, my girl. Take my word for it.  Do your accounting course
         then find a good job round here instead of traipsing off to the big
         city. And here's your cup of tea.
:Emma:   Oh, thanks. But Granny, there's more to life than getting married and
	 having babies. And I want to see a bit of the world before I
	 settle down. I've been thinking about private banking ...
------

This is rendered as:

:Granny: I thought you told me you'd already made up your mind to do
         accountancy.
:Emma:   I don't know. There are all kinds of other work in finance and I'm not
         sure accounting would be too exciting.
:Granny: Exciting? What you need is a good steady job and a good steady
         boyfriend, my girl. Take my word for it.  Do your accounting course
         then find a good job round here instead of traipsing off to the big
         city. And here's your cup of tea.
:Emma:   Oh, thanks. But Granny, there's more to life than getting married and
	 having babies. And I want to see a bit of the world before I
	 settle down. I've been thinking about private banking ...

See the [formatting] for a detailed syntax description.

