2004-10-21  Tomas Cerha  <cerha@brailcom.org>

	* resources/css/default.css: New styles added.

	* lcg/export.py (Exporter._export_node): Pass the exported content
	to `self._wrap_content()'.
	(Exporter._wrap_content, StaticExporter._wrap_content): Take the
	exported content as an argument.

	* lcg/content.py (Content._script_write): New method.
	(Content._speaking_text): New method.
	(Content._answer_control): New method.
	(VocabList.export): Use self._speaking_text() to render the
	english word.
	(VocabItem.__init__): The `sound_file' arguemtnt renamed to `media'.
	(Selection._format_choice): New method.
	(Selection._choice_controls): Use `self._format_choice()' to
	format the choice.
	(Selection._export_choices): Render choices as a div with separate
	lines, rather than
	an ordered list.
	(MultipleChoiceQuestion.export): Enclose the whole task in a
	paragraph (including the choices).
	(TrueFalseStatement._format_choice): New method.
	(TrueFalseStatement._export_choices): Return the controls just as
	they are, without any aditional formatting.
	(Exercise.export): Wrap all the tasks in a form.  Pass the form
	name to `self._export_tasks()'.
	(Exercise._export_tasks): Take the `form_name' argument.
	(Exercise._export_instructions): Use `self._script_write()' to
	format the recording controls compatible also with non-javascript
	enabled browsers.
	(Cloze._export_tasks): Take the `form_name' argument.  Prefix the
	onClick handler with "javascript: ".
	(Cloze._export_tasks): Don't wrap the tasks in a form.
	(TrueFalseStatements._instructions): Cosmetic changes.
	(Selection._export_choices): Method removed.
	(TrueFalseStatement._export_choices): Method removed.
	(Selection.export): Don't use `self._export_choices()'.
	(MultipleChoiceQuestion.export): Don't use `self._export_choices()'.
	(TrueFalseStatement.export): New method.

2004-10-20  Tomas Cerha  <cerha@brailcom.org>

	* Makefile (all): Don't pass the stylesheet argument to the
	generator script.
	(sync-data): Directories fixed.

	* lcg/course.py (ContentNode.__init__): New argument `default_resource_dir'.
	(ContentNode.default_resource_dir): New method.
	(Resource.source_file): If the source file does not exist, try the
	`default_resource_dir' directory.
	(Resource.name): New method.
	(Media.name): Moved to parent class.

	* lcg/content.py (Cloze.__init__): The script name changed to
	`exercises.js'.
	(VocabItem.__init__, Choice.__init__)
	(MultipleChoiceQuestion.__init__, TrueFalseStatement.__init__)
	(ClozeTask.__init__, TransformationTask.__init__)
	(Exercise.__init__): Use `isinstance()' for type assertions
	/`StringTypes' for strings and BooleanType' for boolean data/.
	Convert string values to unicode.

	* resources/scripts/exercises.js: New file.

	* resources/scripts/audio.js: New file.

	* resources/css/default.css: New file.

	* lcg/export.py (StaticExporter._wrap_content): Don't export the
	MediaPlayer object.
	(StaticExporter._wrap_content): Alocate the stylesheet only if
	it is not None.

2004-10-19  Tomas Cerha  <cerha@brailcom.org>

	* TODO: New file.

	* COPYING: New file.

	* Makefile (sync-data): New target.
	(sync): New target.

	* lcg/export.py (Exporter._export_node): Convert the contents to
	UTF-8 before writing the file.
	(StaticExporter._wrap_content): Set the charset to UTF-8.  Include
	the Media Player object in the header to make it available in MSIE.

	* lcg/feed.py (ExcelVocabFeeder._CHARSET): New constant.
	(ExcelVocabFeeder.feed): Convert the translation to unicode.

	* lcg/content.py (VocabItem.__init__): Accept also a unicode
	string as a `translation' arg.
	(Exercise.__init__): Allocate the dependency on the `audio.js'
	script.
	(Transformation._instructions): Unwanted backslash removed.

	* lcg/content.py (Exercise._export_instructions): Format the
	Recording launcher as a button, rather than a link.

2004-10-18  Tomas Cerha  <cerha@brailcom.org>

	* lcg/export.py (StaticExporter._hotkey): Use just numbers as
	shortcut keys.

	* lcg/course.py (Media.name): New method.

	* lcg/content.py (Transformation._instructions): New method.

2004-10-05  Tomas Cerha  <cerha@brailcom.org>

	* lcg/content.py (TrueFalseStatement.export): New method.
	(ClozeTask._export_text): New method.
	(ClozeTask.export): Use it.
	(TransformationTask._make_field): Method removed.
	(TransformationTask.__init__): New method.
	(TransformationTask.export): New method.

	* lcg/feed.py (ExcelVocabFeeder_LANGUAGE_ORDER): Spanish added.
	(ExerciseFeeder._read_transformation): Make sure that there are
	just two lines.  Pass each line as a separate argument to
	`TransformationTask' constructor.

	* doc/manual.wiki: Exercise names updated.  New exercise types
	added.  Task type descriptions moved to the descriptions of
	corresponding exercise types.

2004-10-04  Tomas Cerha  <cerha@brailcom.org>

	* lcg/feed.py (ExerciseFeeder._read_task): Honour the name change
	`Cloze' -> `ClozeTask' and `Transformation' ->
	`TransformationTask'.
	(ExerciseFeeder._read_cloze): Honour the name change `Cloze' ->
	`ClozeTask'.
	(ExerciseFeeder._read_transformation): Honour the name change
	 `Transformation' -> `TransformationTask'.

	* lcg/content.py (Selection.export): Don't wrap the choices into a
	paragraph.
	(MultipleChoiceQuestion.export): Don't include the choices in the
	paragraph, leave there just the question.
	(Cloze): Renamed to `ClozeTask'.
	(ClozeTask.__init__): Honour the change `Cloze' -> `ClozeTask'.
	(Transformation): Honour the change `Cloze' -> `ClozeTask'.
	(Transformation): Renamed to `TransformationTask'.
	(TransformationTask._make_field): Honour the change
	`Transformation' -> `TransformationTask'.
	(Exercise.__init__): New optional arguments `sound_file' and
	`transcript'.  Initialize the corresponding media object if a
	`sound_file' specified.
	(Exercise._header): If `self._name' is Null, take the name from
	class name.
	(ListeningExercise): Class removed.
	(Exercise._export_instructions): If `sound_file' was specified in
	constructor, include the link to play the recording.
	(ClozeTest): Renamed to `Cloze'.
	(Cloze_task_type): Honour the change `Cloze' -> `ClozeTask'.
	(Cloze_name): Removed.
	(Cloze.__init__): Honour the change `ClozeTest' -> `Cloze'.
	(Cloze._instructions): Return different instructions when the
	`sound_file' was specified at constructor.
	(Cloze._export_tasks): Use the 'action' attribute for the <form>
	tag.
	(ListeningClozeTest): Class removed.
	(TrueFalseExercise): Renamed to `TrueFalseStatements'.
	(TrueFalseComprehensionExercise): Class removed.
	(MultipleChoiceExercise): Renamed to `MultipleChoiceQuestions'.
	(MultipleChoiceQuestions._name): Removed.
	(MultipleChoiceComprehensionExercise): Class removed.
	(SelectionExercise): Renamed to `Selections'.  Honour the parent
	class name change.
	(ListeningSelectionExercise): Class removed.
	(GapFillingExercise): Renamed to `GapFilling'.  Honour the parent
	class name change.
	(GapFilling._name): Removed.
	(SentenceCompletionExercise): Renamed to `SentenceCompletion'.
	Honour the parent class name change.
	(SentenceCompletion._name): Renmoved.
	(TransformationExercise): Renamed to `Transformation'.  Honour the
	parent class name change.
	(Transformation._task_type): Honour the change `Transformation' ->
	`TransformationTask'.
	(Transformation._name): Removed. 
	(Dictation): Honour the change `ClozeTest' -> `Cloze'.
	(Dictation._name): Removed. 

	* lcg/export.py (StaticExporter._wrap_content): Added support for
	http-equiv meta tags and encoding specified.  Don't forget to
	close the <script> header tag.  Use the 'type' attribute with the
	<script> tag.

2004-10-01  Tomas Cerha  <cerha@brailcom.org>

	* lcg/content.py
	(Selection): New class based on `MultipleChoiceQuestion'
	implementation.
	(MultipleChoiceQuestion): Derive from `Selection' and only extend
	the cnostructor and the `export()' method with the question.
	(TrueFalseStatement._export_choices): Respect the changes in
	parent class.
	(Cloze._REGEXP): New constant.
	(Cloze.__init__): Don't allocate the resources (media and
	scripts).
	(Cloze.answers): New method.
	(Cloze._make_field): Don't add the word to self._answers().
	(Cloze.export): Don't export anything related to the form.  Export
	just a paragraph of text with input fields.
	(Transformation): New class.
	(Exercise._export_tasks): New method.
	(Exercise.export): Use it.
	(ListeningExercise.__init__): Read the transcript file and use it
	as `tts_input' argument for the created `Media' object.
	(ClozeTest.__init__): Allocate the media and script for exercise
	evaluation.
	(ClozeTest._instructions): New method.
	(ClozeTest._export_tasks): Export also a form and controls for
	exercise evaluation.
	(ListeningClozeTest): New class.
	(SelectionExercise): New class.
	(ListeningSelectionExercise): New class.
	(GapFillingExercise._instructions): Text updated.
	(MultipleChoiceExercise._instructions): Text updated.
	(SentenceCompletionExercise): New class.
	(TransformationExercise): New class.
	(Dictation): New class.

	* lcg/export.py (Exporter._export_resource): Escape apostrophes in
	a TTS input.
	(StaticExporter._wrap_content): Don't use the `type' attribute for a
	`script' tag (doesn't work with Mozilla).

	* lcg/course.py (ContentNode.lang): New method.

	* lcg/feed.py (ExcelVocabFeeder._LANGUAGE_ORDER): New constant.
	(ExcelVocabFeeder.feed): Assertion for parent language existence
	in `self._LANGUAGE_ORDER'.
	(ExcelVocabFeeder.feed): Search the translation according to
	parents language and the `_LANGUAGE_ORDER' constant.  Don't
	require all the columns to exist (but report missing
	translations).
	(ExerciseFeeder._read_task): Add a mapping for `Selection' type
	task.
	(ExerciseFeeder._process_choices): Don't expect the statement in
	the input, unpack just the choices.  Take the sequence of lines as
	argument instead of multiline text.
	(ExerciseFeeder._read_selection): Nová metoda.
	(ExerciseFeeder._read_multiple_choice_question)
	(ExerciseFeeder._read_gap_fill_statement): Split the text to lines
	and treat the question/statement separately.  Process only the
	remaining lines with `_read_selection()'.
	(ExerciseFeeder._read_task): New mapping for `Transformation'.
	(ExerciseFeeder._read_transformation): New method'

2004-09-24  Tomas Cerha  <cerha@brailcom.org>

	* lcg/ims.py (_Manifest._create_item): Use
	`ContentNode.resources()' instead of `ContentNode.list_media()'.
	Use `self._export_resource()' instead of
	`ContentNode._export_media()'.

	* lcg/export.py (Exporter._export_node): Use
	`ContentNode.resources()' instead of `ContentNode.list_media()'.
	Use `self._export_resource()' instead of
	`ContentNode._export_media()'.
	(Exporter._export_media): Renamed to
	`Exporter._export_resource()'.
	(Exporter._export_resource): Do the TTS only for Media instances.
	(StaticExporter._wrap_content.tags): New function.
	(StaticExporter._wrap_content): Use it instead of `self._meta()'
	and `self._links()'.  Include HTML head tags for all `Script' and
	`Stylesheet' instances this node depends on.
	(StaticExporter._meta): Method removed.
	(StaticExporter._links): Method removed.
	(StaticExporter.export): Method removed.
	(StaticExporter._wrap_content): Set the `language' attribute of
	the header `script' tag.

	* lcg/course.py: Docstring updated.
	(ContentNode): Docstring updated.
	(ContentNode.__init__): Docstring updated.
	(ContentNode._media: Renamed to `_resources'.
	(ContentNode._read_resource): Renamed to `_read_file'.
	(ContentNode.list_media): Renamed to `resources'.  New argument
	cls to filter the returned list.
	(ContentNode._resource): New method.
	(ContentNode.media): Use it.
	(ContentNode.script): New method.
	(ContentNode.stylesheet): New method.
	(TextNode._create_content, InnerNode._create_content)
	(InnerNode.title): `ContentNode._read_resource()' ->
	`ContentNode._read_file'.
	(Resource): New class (based on the Media code.
	(Media): Derive from it.  Most methods moved to Resource.
	(EurochanceCourse._create_children): Suppose only directories
	beginning with numbers as unit subdirectories.
	(Script, Stylesheet): New classes.

	* lcg/content.py (Cloze.__init__): Allocate media files for the
	evaluation response.
	(Cloze._form_name): Method removed.
	(Cloze._script.check): Function removed.
	(Cloze._script): Make the evaluation function generic, taking the
	form and correct answers as arguments.  Play a response sound
	after evaluation.  Mark incorrect answers by an exclamation mark.
	(Cloze.export): Pass the form name and correct answers as an
	argument to a Javascript evaluation function.
	(Cloze.__init__): Don't store the media in attributtes, just
	allocate the dependency as well as the new dependency for the
	Javascript code `eval-cloze.js'.
	(Cloze._script): Method removed.
	(Cloze.export): Don't use the removed `_script()' method.

2004-09-23  Tomas Cerha  <cerha@brailcom.org>

	* Makefile (all): Pass a stylesheet filename to the generator.

	* bin/generate.py (course): Take the stylesheet name as a third
	argument and pass it to the StaticExporter constructor.

	* lcg/content.py (Cloze.__init__): Initialize the variable
	`self._answers'.
	(Cloze._make_field): Don't set fields style at all.  Store the
	words in the `self._answers' array.
	(Cloze._form_name): New method.
	(Cloze._script.check): New method.
	(Cloze.export): Include also the evaluate button and the
	Javascript code to evaluate the results.
	(Exercise._header): New method.
	(Exercise.export): Use it.

	* lcg/export.py (StaticExporter.__init__): New method.
	(StaticExporter._wrap_content): Add a stylesheet link to the
	header if a stylesheet is defined.  Set the class of the `<hr>'
	tag to separate the nevigation.  Don'd set the bgcolor body
	attributte.  Wrap the content in a div.
	(StaticExporter._div): New method.
	(StaticExporter._navigation): Wrap the result in a div.
	(StaticExporter._toc): Wrap the result in a div.
	(StaticExporter.export): New method (copy the stylesheet file
	after exporting).
	(StaticExporter._wrap_content): Add the `next' and `prev' `link'
	tags to the header.  Add an anchor with an accesskey to the
	beginning of the contents.
	(StaticExporter._hotkey): New variable. 
	(StaticExporter._links): New method. 
	(StaticExporter._navigation): Add hotkeys to the links.
	(StaticExporter._link): New keyword argument 'key'.

2004-09-03  Tomas Cerha  <cerha@brailcom.org>

	* lcg/export.py (StaticExporter._link): New method.
	(StaticExporter._navigation): Use it.  Also create a link to
	parent node when it's not a root node.

	* lcg/course.py (ContentNode.parent): New method.
	(Media.source_file): Cosmetic improvements. 

2004-09-01  Tomas Cerha  <cerha@brailcom.org>

	* lcg/export.py (StaticExporter._toc): New method.
	(StaticExporter._make_toc): New method.
	(StaticExporter._wrap_content): Use self._toc().

	* lcg/content.py (TableOfContents): Class removed.

	* Makefile: Remove the html files before running the generator.
	Don't zip the package.  Export the `LCG_TTS_COMMAND' variable.

	* lcg/course.py (ContentNode.linear, ContentNode.next) 
	(ContentNode.prev): Docstring written.
	(ContentNode.index): New method.
	(ContentNode._node_path): New method.
	(ContentNode._id): New method.
	(ContentNode.id): Don't use the subdir to construct the id, use
	concatenating the hierarchy of `self._id()'.
	(ContentNode.full_title): Use `self._node_path()'.
	(ContentNode.counter): Docstring updated.
	(NumberedNode): Class removed.
	(Course.output_file): Method removed.
	(Unit): Inherit `InnerNode', not `NumberedNode'.
	(Unit._id): New method.
	(Unit.title): New method.
	(EurochanceCourse._create_children): Don't create the counter for
	counting NumberedNode's number.
	(ContentNode.__str__): Don't report the `output_file'.
	(Course): Renamed to `RootNode'.
	(RootNode.__init__): Honour the name change.
	(Media.__init__): Docstring updated.
	(EurochanceCourse): `Course' -> `RootNode'.
	(RootNoode._create_content): Method removed. 

2004-08-31  Tomas Cerha  <cerha@brailcom.org>

	* bin/generate.py: Use the `StaticExporter' to export the content.

	* lcg/__init__.py: Import also the  modules `export' a `ims'.

	* lcg/course.py: Module docstring updated.
	(ContentNode): Docstring updated.
	(ContentNode._export): Method removed.
	(full_title): Method removed.
	(ContentNode.content): New method.
	(export): Method removed.
	(Course): Docstring updated.
	(_export): Method removed.
	(Media._source_file): Renamed to `source_file()'.
	(Media._destination_file): Renamed to `destination_file()'.
	(Media.__init__, Media.url): Honour the change above.
	(Media.export): Method removed.
	(ContentNode.__str__): Report `subdir' instead of `src_dir'.
	(ContentNode.__str__): Use
	(ContentNode.linear): New method.
	(ContentNode.next): New method.
	(ContentNode.prev): New method.
	(ContentNode.subdir): New method.
	(ContentNode.dst_dir): Method removed.
	(ContentNode.src_dir): Construct the path out of root nodes
	`src_dir' and the `subdir'.
	(ContentNode.id): Make the id out of name and `subdir'.
	(ContentNode.full_title): New method.
	(ContentNode.meta): New method.
	(Course.output_file): Don't use `self.dst_path()'.
	(Media.shared_directory): Renamed to `SUBDIRECTORY'.
	(Media.source_file): `self.shared_directory' ->
	`self.SUBDIRECTORY'.
	(Media.destination_file): Put all media files into one directory,
	with a subdirectory for each node.
	(EurochanceCourse._create_children): New method.

	* lcg/ims.py (Manifest): Renamed to `_Manifest'. 
	(IMSExporter): New class.

	* lcg/export.py (Module): New module.
	(Exporter._full_title): Method removed.
	(Exporter._export_node): Put all files into the same directory.
	(Exporter._wrap_content): Use `node.full_title()' instead of
	`self._full_title()'.
	(Exporter._export_media): Don't take the `dir' argument.  Use
	`self._dir' instead.
	(StaticExporter._wrap_content): Print the doctype, meta
	information, title header and navigation.
	(StaticExporter._wrap_content): New method.
	(StaticExporter._wrap_content): New method.

2004-06-25  Tomas Cerha  <cerha@brailcom.org>

	* lcg/course.py (Media.export): Set the `cmd' to None first.

2004-06-24  Tomas Cerha  <cerha@brailcom.org>

	* lcg/course.py (Media.export): Use the LCG_TTS_COMMAND
	environment variable.  If not set, don't try to synthesize the text.

2004-06-23  Tomas Cerha  <cerha@brailcom.org>

	* Makefile: Set the `LCG_TTS_COMMAND' environment variable.

2004-05-21  Tomas Cerha  <cerha@brailcom.org>

	* doc/structure.wiki: Finished.

	* doc/manual.wiki: Finished.

2004-05-20  Tomas Cerha  <cerha@brailcom.org>

	* doc/manual.wiki: New file.

	* doc/structure.wiki: New file.

	* doc/roles.wiki: New file.

2004-05-14  Tomas Cerha  <cerha@brailcom.org>

	* lcg/util.py (SplittableText): New class.

	* lcg/_test.py (SplittableText): New set of tests.

	* lcg/feed.py: Import the Python module `traceback'.  Import `util'.
	All commented-out classes at the end of file removed.
	(Feeder.__init__): New method.
	(Feeder._input_file): New method.
	(PySpecFeeder): More documentation added.
	(PySpecFeeder._input_file): New method.
	(PySpecFeeder.__init__): Method removed.
	(PySpecFeeder._get_module): Use `self._file' instead of
	`self._name'.
	(ExcelVocabFeeder.__init__): Method removed.
	(ExcelVocabFeeder.feed): Use `self._input_file()'
	(ExerciseFeeder): New class.
	(ExerciseFeeder_PieceOfText): Removed.
	(ExerciseFeeder.feed): Use `SplittableText' instead of
	`self._PieceOfText'.
	(ExerciseFeeder._exercise, ExerciseFeeder._read_task): Use the
	`traceback' module for printing tracebacks instead of
	`code.InteractiveInterpreter'.
	(ExerciseFeeder._read_header): Docstring added.  Assertion message
	simplified.

	* lcg/course.py (ContentNode._read_resource): Don't use the language
	extension for filenames.
	(Module): Class removed.
	(Exercises._create_content): Use `ExerciseFeeder' instead of
	`PySpecFeeder'.
	(Unit._create_children): Act as the removed `Module' node
	according to course structure changes.
	(EurochanceCourse): Documentation updated.
	(EurochanceCourse._create_children): Create just a sequence of `Unit's.

	* lcg/content.py (Exercise.__init__): Report the actual `tasks' value
	in assertion error message..
	(Exercise.task_type): New method.
	(ComprehensionExercise.__init__): Method removed.
	(ClozeTest.__init__): Method removed.
	(ClozeTest._task_type): Set.
	(Container.__init__, GenericText.__init__, VocabList.__init__)
	(MultipleChoiceQuestion.__init__, Cloze.__init__)
	(Exercise.__init__, ComprehensionExercise.__init__): Call parent
	constructor prior to everyting else.

	* lcg/__init__.py: Update globals for module `feed' as well.

2004-05-04  Tomas Cerha  <cerha@brailcom.org>

	* lcg/_test.py (ContentNode.check_misc): Check also the methods
	`counter()', `id()' and `children()'.

	* lcg/course.py (ContentNode._create_content) 
	(ContentNode._create_children): More documentation added.
	(ContentNode._register_child): New method.
	(ContentNode.__init__): Use it.
	(Course): Docstring improved.
	(ContentNode._create_children): Docstring improved.
	(ContentNode._create_content): Docstring improved.
	(ContentNode): Docstring improved.

2004-05-03  Tomas Cerha  <cerha@brailcom.org>

	* lcg/_test.py (Module): Import `lcg' and `os', not `lesson'.
	(ContentNode): New class
	(Client): Class removed.
	

	* lcg/course.py (Module): Code reorganized to separate the general
	classes from the classes implementing concrete Eurochance Course
	structure.
	(EurochanceCourse): New class.
	(Course._create_children): Method moved to the new
	`EurochanceCourse' class.
	(Course.__init__): Unused argument `lang' removed.
	(NumberedNode.__init__, Course.__init__): Use `super()' to call
	the constructor of parent class.
	(ContentNode.src_dir): Return just the subdir if parent is None.
	(ContentNode.dst_dir): Return just the subdir if parent is None.
	(Course.output_file): New method.
	(dst_dir): Method removed.

	* lcg/util.py (list_subdirs): Ignore `CVS' directories.

	* Makefile: New target `test'.

	* bin/generate.py: Use `EurochanceCourse' instead of `Course'.
	Don't use the `lang' argument.

