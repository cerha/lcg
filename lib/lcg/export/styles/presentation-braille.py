# -*- coding: utf-8 -*-

# Copyright (C) 2012-2015 OUI Technology Ltd.
# Copyright (C) 2019 Tomáš Cerha <t.cerha@gmail.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

"""Default presentation file for Braille output."""

from __future__ import unicode_literals

import lcg
import os

braille_tables = {'en': ['en-us-g1.ctb'],
                  'cs': ['cs-g1.ctb',
                         os.path.join(os.path.dirname(lcg.__file__),
                                      'export/braille-tables/lcg.utb')],
                  'nemeth': ['nemeth.ctb']}
braille_hyphenation_tables = {'en': 'hyph_en_US.dic',
                              'cs': 'hyph_cs_CZ.dic'}
braille_math_rules = 'nemeth'  # 'nemeth', 'czech'

page_width = lcg.UFont(35)
page_height = lcg.UFont(29)
inner_margin = lcg.UFont(0)
outer_margin = lcg.UFont(0)
top_margin = lcg.UFont(0)
bottom_margin = lcg.UFont(0)

left_page_footer = lcg.Container((lcg.PageNumber(),
                                  lcg.TextContent(' '),
                                  lcg.Container((lcg.PageHeading(),),
                                                halign=lcg.HorizontalAlignment.CENTER),))
right_page_footer = lcg.Container((lcg.Container((lcg.PageHeading(),),
                                                 halign=lcg.HorizontalAlignment.CENTER),
                                   lcg.TextContent(' '),
                                   lcg.PageNumber(),))

debug_device_output_en = {
    # whitespace
    u'\n': u'\n',
    u'\f': u'\n\f\n',
    u' ': u' ',
    # Braille characters
    u'⠀': u' ',
    u'⠁': u'a',
    u'⠂': u'1',
    u'⠃': u'b',
    u'⠄': u"'",
    u'⠅': u'k',
    u'⠆': u'2',
    u'⠇': u'l',
    u'⠈': u'`',
    u'⠉': u'c',
    u'⠊': u'i',
    u'⠋': u'f',
    u'⠌': u'/',
    u'⠍': u'm',
    u'⠎': u's',
    u'⠏': u'p',
    u'⠐': u'"',
    u'⠑': u'e',
    u'⠒': u'3',
    u'⠓': u'h',
    u'⠔': u'9',
    u'⠕': u'o',
    u'⠖': u'6',
    u'⠗': u'r',
    u'⠘': u'~',
    u'⠙': u'd',
    u'⠚': u'j',
    u'⠛': u'g',
    u'⠜': u'>',
    u'⠝': u'n',
    u'⠞': u't',
    u'⠟': u'q',
    u'⠠': u',',
    u'⠡': u'*',
    u'⠢': u'5',
    u'⠣': u'<',
    u'⠤': u'-',
    u'⠥': u'u',
    u'⠦': u'8',
    u'⠧': u'v',
    u'⠨': u'.',
    u'⠩': u'%',
    u'⠪': u'{',
    u'⠫': u'$',
    u'⠬': u'+',
    u'⠭': u'x',
    u'⠮': u'!',
    u'⠯': u'&',
    u'⠰': u';',
    u'⠱': u':',
    u'⠲': u'4',
    u'⠳': u'|',
    u'⠴': u'0',
    u'⠵': u'z',
    u'⠶': u'7',
    u'⠷': u'(',
    u'⠸': u'_',
    u'⠹': u'?',
    u'⠺': u'w',
    u'⠻': u'}',
    u'⠼': u'#',
    u'⠽': u'y',
    u'⠾': u')',
    u'⠿': u'=',
    u'⡀': u'[ 7]',
    u'⡁': u'[a7]',
    u'⡂': u'[17]',
    u'⡃': u'[b7]',
    u'⡄': u"['7]",
    u'⡅': u'[k7]',
    u'⡆': u'[27]',
    u'⡇': u'[l7]',
    u'⡈': u'[`7]',
    u'⡉': u'[c7]',
    u'⡊': u'[i7]',
    u'⡋': u'[f7]',
    u'⡌': u'[/7]',
    u'⡍': u'[m7]',
    u'⡎': u'[s7]',
    u'⡏': u'[p7]',
    u'⡐': u'["7]',
    u'⡑': u'[e7]',
    u'⡒': u'[37]',
    u'⡓': u'[h7]',
    u'⡔': u'[97]',
    u'⡕': u'[o7]',
    u'⡖': u'[67]',
    u'⡗': u'[r7]',
    u'⡘': u'[~7]',
    u'⡙': u'[d7]',
    u'⡚': u'[j7]',
    u'⡛': u'[g7]',
    u'⡜': u'[>7]',
    u'⡝': u'[n7]',
    u'⡞': u'[t7]',
    u'⡟': u'[q7]',
    u'⡠': u'[,7]',
    u'⡡': u'[*7]',
    u'⡢': u'[57]',
    u'⡣': u'[<7]',
    u'⡤': u'[-7]',
    u'⡥': u'[u7]',
    u'⡦': u'[87]',
    u'⡧': u'[v7]',
    u'⡨': u'[.7]',
    u'⡩': u'[%7]',
    u'⡪': u'[{7]',
    u'⡫': u'[$7]',
    u'⡬': u'[+7]',
    u'⡭': u'[x7]',
    u'⡮': u'[!7]',
    u'⡯': u'[&7]',
    u'⡰': u'[;7]',
    u'⡱': u'[:7]',
    u'⡲': u'[47]',
    u'⡳': u'[|7]',
    u'⡴': u'[07]',
    u'⡵': u'[z7]',
    u'⡶': u'[77]',
    u'⡷': u'[(7]',
    u'⡸': u'[_7]',
    u'⡹': u'[?7]',
    u'⡺': u'[w7]',
    u'⡻': u'[}7]',
    u'⡼': u'[#7]',
    u'⡽': u'[y7]',
    u'⡾': u'[)7]',
    u'⡿': u'[=7]',
    u'⢀': u'[ 8]',
    u'⢁': u'[a8]',
    u'⢂': u'[18]',
    u'⢃': u'[b8]',
    u'⢄': u"['8]",
    u'⢅': u'[k8]',
    u'⢆': u'[28]',
    u'⢇': u'[l8]',
    u'⢈': u'[`8]',
    u'⢉': u'[c8]',
    u'⢊': u'[i8]',
    u'⢋': u'[f8]',
    u'⢌': u'[/8]',
    u'⢍': u'[m8]',
    u'⢎': u'[s8]',
    u'⢏': u'[p8]',
    u'⢐': u'["8]',
    u'⢑': u'[e8]',
    u'⢒': u'[38]',
    u'⢓': u'[h8]',
    u'⢔': u'[98]',
    u'⢕': u'[o8]',
    u'⢖': u'[68]',
    u'⢗': u'[r8]',
    u'⢘': u'[~8]',
    u'⢙': u'[d8]',
    u'⢚': u'[j8]',
    u'⢛': u'[g8]',
    u'⢜': u'[>8]',
    u'⢝': u'[n8]',
    u'⢞': u'[t8]',
    u'⢟': u'[q8]',
    u'⢠': u'[,8]',
    u'⢡': u'[*8]',
    u'⢢': u'[58]',
    u'⢣': u'[<8]',
    u'⢤': u'[-8]',
    u'⢥': u'[u8]',
    u'⢦': u'[88]',
    u'⢧': u'[v8]',
    u'⢨': u'[.8]',
    u'⢩': u'[%8]',
    u'⢪': u'[{8]',
    u'⢫': u'[$8]',
    u'⢬': u'[+8]',
    u'⢭': u'[x8]',
    u'⢮': u'[!8]',
    u'⢯': u'[&8]',
    u'⢰': u'[;8]',
    u'⢱': u'[:8]',
    u'⢲': u'[48]',
    u'⢳': u'[|8]',
    u'⢴': u'[08]',
    u'⢵': u'[z8]',
    u'⢶': u'[78]',
    u'⢷': u'[(8]',
    u'⢸': u'[_8]',
    u'⢹': u'[?8]',
    u'⢺': u'[w8]',
    u'⢻': u'[}8]',
    u'⢼': u'[#8]',
    u'⢽': u'[y8]',
    u'⢾': u'[)8]',
    u'⢿': u'[=8]',
    u'⣀': u'[ 78]',
    u'⣁': u'[a78]',
    u'⣂': u'[178]',
    u'⣃': u'[b78]',
    u'⣄': u"['78]",
    u'⣅': u'[k78]',
    u'⣆': u'[278]',
    u'⣇': u'[l78]',
    u'⣈': u'[`78]',
    u'⣉': u'[c78]',
    u'⣊': u'[i78]',
    u'⣋': u'[f78]',
    u'⣌': u'[/78]',
    u'⣍': u'[m78]',
    u'⣎': u'[s78]',
    u'⣏': u'[p78]',
    u'⣐': u'["78]',
    u'⣑': u'[e78]',
    u'⣒': u'[378]',
    u'⣓': u'[h78]',
    u'⣔': u'[978]',
    u'⣕': u'[o78]',
    u'⣖': u'[678]',
    u'⣗': u'[r78]',
    u'⣘': u'[~78]',
    u'⣙': u'[d78]',
    u'⣚': u'[j78]',
    u'⣛': u'[g78]',
    u'⣜': u'[>78]',
    u'⣝': u'[n78]',
    u'⣞': u'[t78]',
    u'⣟': u'[q78]',
    u'⣠': u'[,78]',
    u'⣡': u'[*78]',
    u'⣢': u'[578]',
    u'⣣': u'[<78]',
    u'⣤': u'[-78]',
    u'⣥': u'[u78]',
    u'⣦': u'[878]',
    u'⣧': u'[v78]',
    u'⣨': u'[.78]',
    u'⣩': u'[%78]',
    u'⣪': u'[{78]',
    u'⣫': u'[$78]',
    u'⣬': u'[+78]',
    u'⣭': u'[x78]',
    u'⣮': u'[!78]',
    u'⣯': u'[&78]',
    u'⣰': u'[;78]',
    u'⣱': u'[:78]',
    u'⣲': u'[478]',
    u'⣳': u'[|78]',
    u'⣴': u'[078]',
    u'⣵': u'[z78]',
    u'⣶': u'[778]',
    u'⣷': u'[(78]',
    u'⣸': u'[_78]',
    u'⣹': u'[?78]',
    u'⣺': u'[w78]',
    u'⣻': u'[}78]',
    u'⣼': u'[#78]',
    u'⣽': u'[y78]',
    u'⣾': u'[)78]',
    u'⣿': u'[=78]',
}

debug_device_output_cs = {
    # whitespace
    u'\n': u'\n',
    u'\f': u'\n\f\n',
    u' ': u' ',
    # Braille characters
    u'⠀': u' ',
    u'⠁': u'a',
    u'⠂': u',',
    u'⠃': u'b',
    u'⠄': u'.',
    u'⠅': u'k',
    u'⠆': u';',
    u'⠇': u'l',
    u'⠈': u"'",
    u'⠉': u'c',
    u'⠊': u'i',
    u'⠋': u'f',
    u'⠌': u'í',
    u'⠍': u'm',
    u'⠎': u's',
    u'⠏': u'p',
    u'⠐': u'<a>',
    u'⠑': u'e',
    u'⠒': u':',
    u'⠓': u'h',
    u'⠔': u'*',
    u'⠕': u'o',
    u'⠖': u'!',
    u'⠗': u'r',
    u'⠘': u'$',
    u'⠙': u'd',
    u'⠚': u'j',
    u'⠛': u'g',
    u'⠜': u'é',
    u'⠝': u'n',
    u'⠞': u't',
    u'⠟': u'q',
    u'⠠': u'<A>',
    u'⠡': u'á',
    u'⠢': u'?',
    u'⠣': u'ě',
    u'⠤': u'-',
    u'⠥': u'u',
    u'⠦': u'(',
    u'⠧': u'v',
    u'⠨': u'<G>',
    u'⠩': u'č',
    u'⠪': u'ó',
    u'⠫': u'ň',
    u'⠬': u'ú',
    u'⠭': u'x',
    u'⠮': u'ž',
    u'⠯': u'ý',
    u'⠰': u'<AA>',
    u'⠱': u'š',
    u'⠲': u'+',
    u'⠳': u'ť',
    u'⠴': u')',
    u'⠵': u'z',
    u'⠶': u'"',
    u'⠷': u'w',
    u'⠸': u'|',
    u'⠹': u'ď',
    u'⠺': u'ř',
    u'⠻': u'/',
    u'⠼': u'<N>',
    u'⠽': u'y',
    u'⠾': u'ů',
    u'⠿': u'<+>',
    u'⡀': u' 7',
    u'⡁': u'a7',
    u'⡂': u',7',
    u'⡃': u'b7',
    u'⡄': u'.7',
    u'⡅': u'k7',
    u'⡆': u';7',
    u'⡇': u'l7',
    u'⡈': u"'7",
    u'⡉': u'c7',
    u'⡊': u'i7',
    u'⡋': u'f7',
    u'⡌': u'í7',
    u'⡍': u'm7',
    u'⡎': u's7',
    u'⡏': u'p7',
    u'⡐': u'<a>7',
    u'⡑': u'e7',
    u'⡒': u':7',
    u'⡓': u'h7',
    u'⡔': u'*7',
    u'⡕': u'o7',
    u'⡖': u'!7',
    u'⡗': u'r7',
    u'⡘': u'$7',
    u'⡙': u'd7',
    u'⡚': u'j7',
    u'⡛': u'g7',
    u'⡜': u'é7',
    u'⡝': u'n7',
    u'⡞': u't7',
    u'⡟': u'q7',
    u'⡠': u'<A>7',
    u'⡡': u'á7',
    u'⡢': u'?7',
    u'⡣': u'ě7',
    u'⡤': u'-7',
    u'⡥': u'u7',
    u'⡦': u'(7',
    u'⡧': u'v7',
    u'⡨': u'<G>7',
    u'⡩': u'č7',
    u'⡪': u'ó7',
    u'⡫': u'ň7',
    u'⡬': u'ú7',
    u'⡭': u'x7',
    u'⡮': u'ž7',
    u'⡯': u'ý7',
    u'⡰': u'<AA>7',
    u'⡱': u'š7',
    u'⡲': u'+7',
    u'⡳': u'ť7',
    u'⡴': u')7',
    u'⡵': u'z7',
    u'⡶': u'"7',
    u'⡷': u'w7',
    u'⡸': u'|7',
    u'⡹': u'ď7',
    u'⡺': u'ř7',
    u'⡻': u'/7',
    u'⡼': u'<N>7',
    u'⡽': u'y7',
    u'⡾': u'ů7',
    u'⡿': u'<+>7',
    u'⢀': u' 8',
    u'⢁': u'a8',
    u'⢂': u',8',
    u'⢃': u'b8',
    u'⢄': u'.8',
    u'⢅': u'k8',
    u'⢆': u';8',
    u'⢇': u'l8',
    u'⢈': u"'8",
    u'⢉': u'c8',
    u'⢊': u'i8',
    u'⢋': u'f8',
    u'⢌': u'í8',
    u'⢍': u'm8',
    u'⢎': u's8',
    u'⢏': u'p8',
    u'⢐': u'<a>8',
    u'⢑': u'e8',
    u'⢒': u':8',
    u'⢓': u'h8',
    u'⢔': u'*8',
    u'⢕': u'o8',
    u'⢖': u'!8',
    u'⢗': u'r8',
    u'⢘': u'$8',
    u'⢙': u'd8',
    u'⢚': u'j8',
    u'⢛': u'g8',
    u'⢜': u'é8',
    u'⢝': u'n8',
    u'⢞': u't8',
    u'⢟': u'q8',
    u'⢠': u'<A>8',
    u'⢡': u'á8',
    u'⢢': u'?8',
    u'⢣': u'ě8',
    u'⢤': u'-8',
    u'⢥': u'u8',
    u'⢦': u'(8',
    u'⢧': u'v8',
    u'⢨': u'<G>8',
    u'⢩': u'č8',
    u'⢪': u'ó8',
    u'⢫': u'ň8',
    u'⢬': u'ú8',
    u'⢭': u'x8',
    u'⢮': u'ž8',
    u'⢯': u'ý8',
    u'⢰': u'<AA>8',
    u'⢱': u'š8',
    u'⢲': u'+8',
    u'⢳': u'ť8',
    u'⢴': u')8',
    u'⢵': u'z8',
    u'⢶': u'"8',
    u'⢷': u'w8',
    u'⢸': u'|8',
    u'⢹': u'ď8',
    u'⢺': u'ř8',
    u'⢻': u'/8',
    u'⢼': u'<N>8',
    u'⢽': u'y8',
    u'⢾': u'ů8',
    u'⢿': u'<+>8',
    u'⣀': u' 78',
    u'⣁': u'a78',
    u'⣂': u',78',
    u'⣃': u'b78',
    u'⣄': u'.78',
    u'⣅': u'k78',
    u'⣆': u';78',
    u'⣇': u'l78',
    u'⣈': u"'78",
    u'⣉': u'c78',
    u'⣊': u'i78',
    u'⣋': u'f78',
    u'⣌': u'í78',
    u'⣍': u'm78',
    u'⣎': u's78',
    u'⣏': u'p78',
    u'⣐': u'<a>78',
    u'⣑': u'e78',
    u'⣒': u':78',
    u'⣓': u'h78',
    u'⣔': u'*78',
    u'⣕': u'o78',
    u'⣖': u'!78',
    u'⣗': u'r78',
    u'⣘': u'$78',
    u'⣙': u'd78',
    u'⣚': u'j78',
    u'⣛': u'g78',
    u'⣜': u'é78',
    u'⣝': u'n78',
    u'⣞': u't78',
    u'⣟': u'q78',
    u'⣠': u'<A>78',
    u'⣡': u'á78',
    u'⣢': u'?78',
    u'⣣': u'ě78',
    u'⣤': u'-78',
    u'⣥': u'u78',
    u'⣦': u'(78',
    u'⣧': u'v78',
    u'⣨': u'<G>78',
    u'⣩': u'č78',
    u'⣪': u'ó78',
    u'⣫': u'ň78',
    u'⣬': u'ú78',
    u'⣭': u'x78',
    u'⣮': u'ž78',
    u'⣯': u'ý78',
    u'⣰': u'<AA>78',
    u'⣱': u'š78',
    u'⣲': u'+78',
    u'⣳': u'ť78',
    u'⣴': u')78',
    u'⣵': u'z78',
    u'⣶': u'"78',
    u'⣷': u'w78',
    u'⣸': u'|78',
    u'⣹': u'ď78',
    u'⣺': u'ř78',
    u'⣻': u'/78',
    u'⣼': u'<N>78',
    u'⣽': u'y78',
    u'⣾': u'ů78',
    u'⣿': u'<+>78'
}

# Index Everest-D V2, Index 4x4 PRO V2


def device_init_index_v2(width, height, inner, outer, top, bottom):
    return (('0,0,0,0,x,x,x,x,x,'  # 0-8
             '%(width)d,%(outer)d,%(inner)d,%(top)d,%(bottom)d,4,1,0,0,'  # 9-17
             'x,0,0,x,x,x,x,x,x,0,1,x,x,x,x,x,x,x,x,x,x,x,') %
            dict(width=(width - 23), inner=inner, outer=outer, top=top, bottom=bottom))
# Index Everest-D V3


def device_init_index_v3(width, height, inner, outer, top, bottom):
    return (('DBT0,TD0,LS50,DP2,PN0,PW%(width)d,PL%(height)d,'
             'IM%(inner)d,OM%(outer)d,TM%(top)d,BM%(bottom)d;') %
            dict(width=(width * 6), height=(height * 10),
                 inner=inner, outer=outer, top=top, bottom=bottom))
# Index Everest-D V4, Index 4x4 PRO V3


def device_init_index_v4(width, height, inner, outer, top, bottom):
    return (('DBT0,TD0,LS50,DP2,PN0,CH%(width)d,LP%(height)d,'
             'BI%(inner)d,TM%(top)d;') %
            dict(width=width, height=height, inner=inner, top=top))
device_init = None
device_finish = None

printers = {'Index Everest-D V2, Index 4x4 PRO V2':
            dict(device_init=device_init_index_v2,
                 device_finish=''),
            'Index Everest-D V3':
            dict(device_init=device_init_index_v3),
            'Index Everest-D V4, Index 4x4 PRO V3':
            dict(device_init=device_init_index_v4),
            'Test':
            dict(device_output=(('\f', '\r\n----\r\n'),)),
            }
default_printer = 'Index Everest-D V2, Index 4x4 PRO V2'

device_output = {
    # whitespace
    u'\n': u'\n',
    u'\f': u'\f',
    u' ': u' ',
    # Braille characters
    u'⠀': u' ',
    u'⠁': u'A',
    u'⠂': u'1',
    u'⠃': u'B',
    u'⠄': u"'",
    u'⠅': u'K',
    u'⠆': u'2',
    u'⠇': u'L',
    u'⠈': u'@',
    u'⠉': u'C',
    u'⠊': u'I',
    u'⠋': u'F',
    u'⠌': u'/',
    u'⠍': u'M',
    u'⠎': u'S',
    u'⠏': u'P',
    u'⠐': u'"',
    u'⠑': u'E',
    u'⠒': u'3',
    u'⠓': u'H',
    u'⠔': u'9',
    u'⠕': u'O',
    u'⠖': u'6',
    u'⠗': u'R',
    u'⠘': u'^',
    u'⠙': u'D',
    u'⠚': u'J',
    u'⠛': u'G',
    u'⠜': u'>',
    u'⠝': u'N',
    u'⠞': u'T',
    u'⠟': u'Q',
    u'⠠': u',',
    u'⠡': u'*',
    u'⠢': u'5',
    u'⠣': u'<',
    u'⠤': u'-',
    u'⠥': u'U',
    u'⠦': u'8',
    u'⠧': u'V',
    u'⠨': u'.',
    u'⠩': u'%',
    u'⠪': u'[',
    u'⠫': u'$',
    u'⠬': u'+',
    u'⠭': u'X',
    u'⠮': u'!',
    u'⠯': u'&',
    u'⠰': u';',
    u'⠱': u':',
    u'⠲': u'4',
    u'⠳': u'\\',
    u'⠴': u'0',
    u'⠵': u'Z',
    u'⠶': u'7',
    u'⠷': u'(',
    u'⠸': u'_',
    u'⠹': u'?',
    u'⠺': u'W',
    u'⠻': u']',
    u'⠼': u'#',
    u'⠽': u'Y',
    u'⠾': u')',
    u'⠿': u'=',
}
